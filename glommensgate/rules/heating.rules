import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
import java.lang.Math

rule "Switch on heating when someone comes home or of when someone leaves"
	when
		Item Home changed
	then
		if (Heating.state == ON && Home.state == OFF) {
			sendCommand(Heating, OFF)
			sendCommand(kontor_panelovn, OFF)
			postUpdate(push_message_text, "Heating stopped at " + now)
			callScript('pushMessages')
		} else if (Home.state == ON && Heating.state == OFF) {
			var double temp = new Double(OutdoorTemperature.state.toString())
			var p = now.getHourOfDay
			if (p < 22 && p > 05 && temp < 10) {
				sendCommand(Heating, ON)
				logInfo("org.openhab.rules","Varming av stua har startet")
				postUpdate(push_message_text, "Started heating the living room")
			}
		}
end

rule "If the room is to cold and we are home, then heat it up, but only if it is less than 10 degrees outside"
	when
		Time cron "0 0/20 * * * ?" 
	then
		if (stue_panelovn.state == ON) {
			var double t = new Double(power_panelovn.state.toString())
			var double temp = new Double(OutdoorTemperature.state.toString())
			if (t > 10 && Home.state == ON && temp < 10) {
				sendCommand(Heating, ON)
				logInfo("org.openhab.rules", "Switched on fan")	
			}
		}
end
	
rule "Switch off heating if temp for panelovn is ok, but leave panelovn on, unless more than 10 degrees outside"
	when
		Time cron "0 0/5 * * * ?" 
	then
		if (stue_panelovn.state == ON) {
			var double t = new Double(power_panelovn.state.toString())
			if ((stue_vifteovn.state == ON || stue_vifteovn_2.state == ON) && t < 10) {
				sendCommand(stue_vifteovn, OFF)
				sendCommand(stue_vifteovn_2, OFF)
				logInfo("Heating", "Switched off fan oven")	
			}
			var double temp = new Double(OutdoorTemperature.state.toString())
			if (temp > 10) {
				sendCommand(stue_panelovn, OFF)
				postUpdate(push_message_text, "Switched of panel oven, outside temp is: " + temp)
			}
		}
end

rule "Switch off heating during the week, or when last one leaves home"
	when
		Time cron "0 0 7 ? * MON-FRI"
	then
		if (Heating.state == ON && Home.state == OFF) {
			sendCommand(Heating, OFF)
			sendCommand(kontor_panelovn, OFF)
			postUpdate(push_message_text, "Heating switched off at " + now)
		}
end

rule "Switch off heating in the evening"
	when
		Time cron "0 0 22 ? * *" 
	then
		if (Heating.state == ON) {
			sendCommand(Heating, OFF)
			sendCommand(kontor_panelovn, OFF)
			logInfo("org.openhab.rules", "Heating switched off at " + now)
			postUpdate(push_message_text, "Heating switched off at " + now)
		}
end

rule "Start heating, but only if there are someone at home"
	when
		Time cron "0 30 5 ? * MON-FRI" or
		Time cron "0 0 7 ? * SAT-SUN"
	then
		if (Home.state == ON && new Double(OutdoorTemperature.state.toString()) < 10) {
			sendCommand(Heating, ON)
			logInfo("org.openhab.rules", "Morning heating started")
		}
end

rule "Start heating if button is switched to ON"
	when
		Item left_double_switch received command ON	
	then
		sendCommand(Heating, ON)
end

rule "Stop heating if button is switched to off"
	when
		Item left_double_switch received command OFF	
	then
		sendCommand(Heating, OFF)
end

rule "Left double switch"
	when
		Item left_double_switch received update
	then
		if (left_double_switch.state == ON) {
			sendCommand(Heating, ON)			
		} else {
			sendCommand(Heating, OFF)
		}
end